{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nadan/Documentos/GitHub/happy-app/mobile/src/pages/CreateOrphanage/SelectMapPosition.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport mapMarkerImg from \"../../images/map-marker.png\";\nexport default function SelectMapPosition() {\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    latitude: 0,\n    longitude: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  function handleNextStep() {\n    navigation.navigate(\"OrphanageData\", {\n      position: position\n    });\n  }\n\n  function handleSelectMapPosition(event) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    initialRegion: {\n      latitude: -23.6255975,\n      longitude: -46.5795684,\n      latitudeDelta: 0.008,\n      longitudeDelta: 0.008\n    },\n    style: styles.mapStyles,\n    onPress: handleSelectMapPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  }, position.latitude !== 0 && React.createElement(Marker, {\n    icon: mapMarkerImg,\n    coordinate: {\n      latitude: position.latitude,\n      longitude: position.longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), position.latitude !== 0 && React.createElement(RectButton, {\n    style: styles.nextButton,\n    onPress: handleNextStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.nextButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Pr\\xF3ximo\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  mapStyles: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  nextButton: {\n    backgroundColor: '#15C3D6',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 56,\n    position: 'absolute',\n    left: 24,\n    right: 24,\n    bottom: 40\n  },\n  nextButtonText: {\n    fontFamily: 'Nunito_800ExtraBold',\n    fontSize: 16,\n    color: '#FFF'\n  }\n});","map":{"version":3,"sources":["/home/nadan/Documentos/GitHub/happy-app/mobile/src/pages/CreateOrphanage/SelectMapPosition.tsx"],"names":["React","useState","useNavigation","RectButton","MapView","Marker","PROVIDER_GOOGLE","mapMarkerImg","SelectMapPosition","navigation","latitude","longitude","position","setPosition","handleNextStep","navigate","handleSelectMapPosition","event","nativeEvent","coordinate","styles","container","latitudeDelta","longitudeDelta","mapStyles","nextButton","nextButtonText","StyleSheet","create","flex","width","Dimensions","get","height","backgroundColor","borderRadius","justifyContent","alignItems","left","right","bottom","fontFamily","fontSize","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,OAAP,IAA4BC,MAA5B,EAAoCC,eAApC,QAA2D,mBAA3D;AAEA,OAAOC,YAAP;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAD0C,kBAEVD,QAAQ,CAAC;AAAES,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAAD,CAFE;AAAA;AAAA,MAEnCC,QAFmC;AAAA,MAEzBC,WAFyB;;AAI1C,WAASC,cAAT,GAA0B;AACxBL,IAAAA,UAAU,CAACM,QAAX,CAAoB,eAApB,EAAqC;AAAEH,MAAAA,QAAQ,EAARA;AAAF,KAArC;AACD;;AAED,WAASI,uBAAT,CAAiCC,KAAjC,EAAkD;AAChDJ,IAAAA,WAAW,CAACI,KAAK,CAACC,WAAN,CAAkBC,UAAnB,CAAX;AACD;;AAED,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACC,IAAA,QAAQ,EAAEf,eADX;AAEC,IAAA,aAAa,EAAE;AACbI,MAAAA,QAAQ,EAAE,CAAC,UADE;AAEbC,MAAAA,SAAS,EAAE,CAAC,UAFC;AAGbW,MAAAA,aAAa,EAAE,KAHF;AAIbC,MAAAA,cAAc,EAAE;AAJH,KAFhB;AAQC,IAAA,KAAK,EAAEH,MAAM,CAACI,SARf;AASC,IAAA,OAAO,EAAER,uBATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYIJ,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACD,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEH,YADR;AAEE,IAAA,UAAU,EAAE;AACVG,MAAAA,QAAQ,EAAEE,QAAQ,CAACF,QADT;AAEVC,MAAAA,SAAS,EAAEC,QAAQ,CAACD;AAFV,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbH,CADF,EAuBKC,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEU,MAAM,CAACK,UAA1B;AAAsC,IAAA,OAAO,EAAEX,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACM,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAxBL,CADD;AA+BD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETjB,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAM/BY,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KADvB;AAETG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAFxB,GANoB;AAW/BR,EAAAA,UAAU,EAAE;AACVS,IAAAA,eAAe,EAAE,SADP;AAEVC,IAAAA,YAAY,EAAE,EAFJ;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVJ,IAAAA,MAAM,EAAE,EALE;AAOVrB,IAAAA,QAAQ,EAAE,UAPA;AAQV0B,IAAAA,IAAI,EAAE,EARI;AASVC,IAAAA,KAAK,EAAE,EATG;AAUVC,IAAAA,MAAM,EAAE;AAVE,GAXmB;AAwB/Bd,EAAAA,cAAc,EAAE;AACde,IAAAA,UAAU,EAAE,qBADE;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,KAAK,EAAE;AAHO;AAxBe,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, Text } from 'react-native';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport MapView, { MapEvent, Marker, PROVIDER_GOOGLE } from 'react-native-maps';\n\nimport mapMarkerImg from '../../images/map-marker.png';\n\nexport default function SelectMapPosition() {\n  const navigation = useNavigation();\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0 });\n\n  function handleNextStep() {\n    navigation.navigate(\"OrphanageData\", { position });\n  }\n\n  function handleSelectMapPosition(event: MapEvent) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n  \n  return (\n   <View style={styles.container}>\n     <MapView\n      provider={PROVIDER_GOOGLE}\n      initialRegion={{\n        latitude: -23.6255975,\n        longitude: -46.5795684,\n        latitudeDelta: 0.008,\n        longitudeDelta: 0.008,\n      }}\n      style={styles.mapStyles}\n      onPress={handleSelectMapPosition}\n     >\n\n       { position.latitude !== 0 && (\n        <Marker\n          icon={mapMarkerImg}\n          coordinate={{ \n            latitude: position.latitude, \n            longitude: position.longitude }}\n        />\n       )}\n     </MapView>\n\n      { position.latitude !== 0 && (\n        <RectButton style={styles.nextButton} onPress={handleNextStep}>\n          <Text style={styles.nextButtonText}>Pr√≥ximo</Text>\n        </RectButton>\n      )}\n   </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  mapStyles: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n\n  nextButton: {\n    backgroundColor: '#15C3D6',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 56,\n\n    position: 'absolute',\n    left: 24,\n    right: 24,\n    bottom: 40,\n  },\n\n  nextButtonText: {\n    fontFamily: 'Nunito_800ExtraBold',\n    fontSize: 16,\n    color: '#FFF'\n  },\n})\n"]},"metadata":{},"sourceType":"module"}